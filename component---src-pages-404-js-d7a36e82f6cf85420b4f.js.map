{"version":3,"sources":["webpack:///./src/pages/404.js"],"names":["__webpack_exports__","_data$site$siteMetada","_public_static_d_3074535679_json__WEBPACK_IMPORTED_MODULE_3__","data","site","siteMetadata","listOfRootPaths","sitemap","isTagged","filter","map","key","redirectVersion","tagged","window","tagsDropdown","tag","location","pathname","includes","version","rootPath","redirect","paths","result","path","getCorrectPathKey","reverse","useEffect","navigate"],"mappings":"kJAYeA,EAAA,mBACb,IADmBC,EACTC,EAAAC,KAgBFC,KAAQC,aAAgBC,EAjBbL,EAiBaK,gBAAiBC,EAjB9BN,EAiB8BM,QAC7CC,EAAWD,EAAQE,OAAO,SAAAC,GAAG,OAAIA,EAAIC,MAAQL,EAAgB,KAAI,GACjEM,EAAmBJ,EAASK,QAA4B,oBAAXC,OAC/CN,EAASO,aAAaN,OAAO,SAAAO,GAAG,OAAIF,OAAOG,SAASC,SAASC,SAASH,EAAII,WAAU,GAAGA,QAAU,SAC/FC,EAAYb,EAASK,OAAU,IAAID,EAAkB,IACrDU,EAA8B,oBAAXR,OAA0BO,EA/BzB,SAACE,EAAOhB,GAChC,IAAIiB,EAASD,EAAMd,OAAO,SAAAgB,GAAI,OAAIX,OAAOG,SAASC,SAASC,SAASM,KAAO,GACvEjB,EAAWD,EAAQE,OAAO,SAAAC,GAAG,OAAII,OAAOG,SAASC,SAASC,SAAST,EAAIC,OAAM,GAC7EC,EAAmBJ,EAASK,OAC9BL,EAASO,aAAaN,OAAO,SAAAO,GAAG,OAAIF,OAAOG,SAASC,SAASC,SAASH,EAAII,WAAU,GAAGA,QAAU,GAEnG,OADmBZ,EAASK,OAA+B,MAAXW,EAAkBA,EAAO,IAAIZ,EAAkB,IAAIA,EAA7DY,EA0BsBE,CAAkBpB,EAAgBqB,UAAWpB,GAMzG,OAJAqB,oBAAU,WACRC,mBAASP,IACR,IAEI","file":"component---src-pages-404-js-d7a36e82f6cf85420b4f.js","sourcesContent":["import { useEffect } from 'react';\nimport { useStaticQuery, graphql, navigate } from 'gatsby';\n\nconst getCorrectPathKey = (paths, sitemap) => {\n  let result = paths.filter(path => window.location.pathname.includes(path))[0];\n  let isTagged = sitemap.filter(map => window.location.pathname.includes(map.key))[0];\n  let redirectVersion = (isTagged.tagged) ? \n    isTagged.tagsDropdown.filter(tag => window.location.pathname.includes(tag.version))[0].version : \"\";\n  let returnStmt = (!isTagged.tagged) ? result : (result !== '/') ? result+\"/\"+redirectVersion : \"/\"+redirectVersion;\n  return returnStmt;\n}\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          sitemap {\n            key,\n            tagged,\n            tagsDropdown {\n              version\n            }\n          }\n          listOfRootPaths\n        }\n      }\n    }\n  `);\n  const { site: { siteMetadata: { listOfRootPaths, sitemap } } } = data;\n  let isTagged = sitemap.filter(map => map.key === listOfRootPaths[0])[0];\n  let redirectVersion = (isTagged.tagged && typeof window !== 'undefined') ? \n    isTagged.tagsDropdown.filter(tag => window.location.pathname.includes(tag.version))[0].version : \"latest\";\n  let rootPath = (isTagged.tagged) ? \"/\"+redirectVersion : \"/\"\n  let redirect = (typeof window === 'undefined') ? rootPath : getCorrectPathKey(listOfRootPaths.reverse(), sitemap);\n\n  useEffect(() => {\n    navigate(redirect);\n  }, []);\n\n  return null;\n}\n"],"sourceRoot":""}