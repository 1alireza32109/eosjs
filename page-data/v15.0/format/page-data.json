{"componentChunkName":"component---src-page-templates-content-page-jsx","path":"/v15.0/format","webpackCompilationHash":"02173ed15321b2f25cc1","result":{"data":{"site":{"pathPrefix":"/eosjs"},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/v16.0/README"}},{"fields":{"slug":"/v16.0/prior_versions"}},{"fields":{"slug":"/v16.0"}},{"fields":{"slug":"/latest/README"}},{"fields":{"slug":"/v16.0/format"}},{"fields":{"slug":"/latest/browsers"}},{"fields":{"slug":"/latest/transaction-examples"}},{"fields":{"slug":"/v15.0/format"}},{"fields":{"slug":"/latest"}},{"fields":{"slug":"/latest/reading-blockchain-examples"}},{"fields":{"slug":"/v15.0/README"}},{"fields":{"slug":"/v15.0/prior_versions"}},{"fields":{"slug":"/v15.0"}},{"fields":{"slug":"/latest/enums/numeric.keytype"}},{"fields":{"slug":"/latest/classes/api.api-1"}},{"fields":{"slug":"/latest/classes/js_sig.jssignatureprovider"}},{"fields":{"slug":"/latest/classes/rpc_error.rpcerror"}},{"fields":{"slug":"/latest/classes/json_rpc.jsonrpc"}},{"fields":{"slug":"/latest/classes/serialize.serialbuffer"}},{"fields":{"slug":"/latest/classes/serialize.serializerstate"}},{"fields":{"slug":"/latest/modules/_eosjs_rpc_interfaces_"}},{"fields":{"slug":"/latest/modules/_rpc_web_"}},{"fields":{"slug":"/latest/modules/_eosjs_api_interfaces_"}},{"fields":{"slug":"/latest/modules/js_sig"}},{"fields":{"slug":"/latest/modules/api"}},{"fields":{"slug":"/latest/modules/rpc_error"}},{"fields":{"slug":"/latest/modules/json_rpc"}},{"fields":{"slug":"/latest/interfaces/_eosjs_api_interfaces_.abiprovider"}},{"fields":{"slug":"/latest/interfaces/_eosjs_api_interfaces_.authorityprovider"}},{"fields":{"slug":"/latest/modules/numeric"}},{"fields":{"slug":"/latest/modules/serialize"}},{"fields":{"slug":"/latest/interfaces/_eosjs_api_interfaces_.authorityproviderargs"}},{"fields":{"slug":"/latest/interfaces/_eosjs_api_interfaces_.binaryabi"}},{"fields":{"slug":"/latest/interfaces/_eosjs_api_interfaces_.cachedabi"}},{"fields":{"slug":"/latest/interfaces/_eosjs_rpc_interfaces_.blocktaposinfo"}},{"fields":{"slug":"/latest/interfaces/_eosjs_api_interfaces_.signatureprovider"}},{"fields":{"slug":"/latest/interfaces/_eosjs_rpc_interfaces_.abi"}},{"fields":{"slug":"/latest/interfaces/_eosjs_api_interfaces_.signatureproviderargs"}},{"fields":{"slug":"/latest/interfaces/_eosjs_rpc_interfaces_.getblockresult"}},{"fields":{"slug":"/latest/interfaces/_eosjs_rpc_interfaces_.getabiresult"}},{"fields":{"slug":"/latest/interfaces/_eosjs_rpc_interfaces_.getinforesult"}},{"fields":{"slug":"/latest/interfaces/_eosjs_rpc_interfaces_.getcoderesult"}},{"fields":{"slug":"/latest/interfaces/_eosjs_rpc_interfaces_.getrawcodeandabiresult"}},{"fields":{"slug":"/latest/interfaces/numeric.key"}},{"fields":{"slug":"/latest/interfaces/_eosjs_rpc_interfaces_.pushtransactionargs"}},{"fields":{"slug":"/latest/interfaces/serialize.action"}},{"fields":{"slug":"/latest/interfaces/serialize.authorization"}},{"fields":{"slug":"/latest/interfaces/serialize.createtypeargs"}},{"fields":{"slug":"/latest/interfaces/serialize.field"}},{"fields":{"slug":"/latest/interfaces/serialize.contract"}},{"fields":{"slug":"/latest/interfaces/serialize.serializedaction"}},{"fields":{"slug":"/latest/interfaces/serialize.symbol"}},{"fields":{"slug":"/latest/interfaces/serialize.serializeroptions"}},{"fields":{"slug":"/latest/interfaces/serialize.type"}}]},"markdownRemark":{"html":"<h2 id=\"functions\">Functions</h2>\n<dl>\n<dt><a href=\"#encodeName\">encodeName(name)</a> ⇒ <code>string.&lt;uint64&gt;</code></dt>\n<dd><p>Encode a name (a base32 string) to a number.</p>\n<p>  For performance reasons, the blockchain uses the numerical encoding of strings\n  for very common types like account names.</p>\n</dd>\n<dt><a href=\"#decodeName\">decodeName(value)</a> ⇒ <code>string</code></dt>\n<dd></dd>\n<dt><a href=\"#DecimalString\">DecimalString()</a> ⇒ <code>string</code></dt>\n<dd><p>Normalize and validate decimal string (potentially large values).  Should\n  avoid internationalization issues if possible but will be safe and\n  throw an error for an invalid number.</p>\n<p>  Normalization removes extra zeros or decimal.</p>\n</dd>\n<dt><a href=\"#DecimalPad\">DecimalPad(value, precision)</a> ⇒ <code>string</code></dt>\n<dd><p>Ensure a fixed number of decimal places.  Safe for large numbers.</p>\n</dd>\n<dt><a href=\"#DecimalImply\">DecimalImply()</a></dt>\n<dd><p>Ensures proper trailing zeros then removes decimal place.</p>\n</dd>\n<dt><a href=\"#DecimalUnimply\">DecimalUnimply(value, precision)</a> ⇒ <code>number</code></dt>\n<dd><p>Put the decimal place back in its position and return the normalized number\n  string (with any unnecessary zeros or an unnecessary decimal removed).</p>\n</dd>\n</dl>\n<p><a name=\"encodeName\"></a></p>\n<h2 id=\"encodenamename-⇒-codestringuint64code\">encodeName(name) ⇒ <code>string.&#x3C;uint64></code></h2>\n<p>Encode a name (a base32 string) to a number.</p>\n<p>  For performance reasons, the blockchain uses the numerical encoding of strings\nfor very common types like account names.</p>\n<p><strong>Kind</strong>: global function<br>\n<strong>Returns</strong>: <code>string.&#x3C;uint64></code> - - compressed string (from name arg).  A string is\nalways used because a number could exceed JavaScript's 52 bit limit.<br>\n<strong>See</strong>: types.hpp string_to_name  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td><code>string</code></td>\n<td>A string to encode, up to 12 characters long.</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"decodeName\"></a></p>\n<h2 id=\"decodenamevalue-⇒-codestringcode\">decodeName(value) ⇒ <code>string</code></h2>\n<p><strong>Kind</strong>: global function  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td><code>Long</code> | <code>String</code> | <code>number</code></td>\n<td>uint64</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"DecimalString\"></a></p>\n<h2 id=\"decimalstring-⇒-codestringcode\">DecimalString() ⇒ <code>string</code></h2>\n<p>Normalize and validate decimal string (potentially large values).  Should\navoid internationalization issues if possible but will be safe and\nthrow an error for an invalid number.</p>\n<p>  Normalization removes extra zeros or decimal.</p>\n<p><strong>Kind</strong>: global function<br>\n<strong>Returns</strong>: <code>string</code> - value<br>\n<a name=\"DecimalPad\"></a></p>\n<h2 id=\"decimalpadvalue-precision-⇒-codestringcode\">DecimalPad(value, precision) ⇒ <code>string</code></h2>\n<p>Ensure a fixed number of decimal places.  Safe for large numbers.</p>\n<p><strong>Kind</strong>: global function<br>\n<strong>Returns</strong>: <code>string</code> - decimal part is added and zero padded to match precision<br>\n<strong>See</strong>: ./format.test.js  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td><code>number</code> | <code>string</code> | <code>object.toString</code></td>\n<td></td>\n</tr>\n<tr>\n<td>precision</td>\n<td><code>number</code></td>\n<td>number of decimal places</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong>  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">DecimalPad</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'10.200'</span>\n\n  </code></pre></div>\n<p><a name=\"DecimalImply\"></a></p>\n<h2 id=\"decimalimply\">DecimalImply()</h2>\n<p>Ensures proper trailing zeros then removes decimal place.</p>\n<p><strong>Kind</strong>: global function<br>\n<a name=\"DecimalUnimply\"></a></p>\n<h2 id=\"decimalunimplyvalue-precision-⇒-codenumbercode\">DecimalUnimply(value, precision) ⇒ <code>number</code></h2>\n<p>Put the decimal place back in its position and return the normalized number\nstring (with any unnecessary zeros or an unnecessary decimal removed).</p>\n<p><strong>Kind</strong>: global function<br>\n<strong>Returns</strong>: <code>number</code> - 1.0000  </p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>value</td>\n<td><code>string</code> | <code>number</code> | <code>value.toString</code></td>\n<td>10000</td>\n</tr>\n<tr>\n<td>precision</td>\n<td><code>number</code></td>\n<td>4</td>\n</tr>\n</tbody>\n</table>","tableOfContents":"<ul>\n<li><a href=\"/eosjs/v15.0/format/#functions\">Functions</a></li>\n<li><a href=\"/eosjs/v15.0/format/#encodenamename-%E2%87%92-codestringuint64code\">encodeName(name) ⇒ &#x3C;code>string.&#x3C;uint64>&#x3C;/code></a></li>\n<li><a href=\"/eosjs/v15.0/format/#decodenamevalue-%E2%87%92-codestringcode\">decodeName(value) ⇒ &#x3C;code>string&#x3C;/code></a></li>\n<li><a href=\"/eosjs/v15.0/format/#decimalstring-%E2%87%92-codestringcode\">DecimalString() ⇒ &#x3C;code>string&#x3C;/code></a></li>\n<li><a href=\"/eosjs/v15.0/format/#decimalpadvalue-precision-%E2%87%92-codestringcode\">DecimalPad(value, precision) ⇒ &#x3C;code>string&#x3C;/code></a></li>\n<li><a href=\"/eosjs/v15.0/format/#decimalimply\">DecimalImply()</a></li>\n<li><a href=\"/eosjs/v15.0/format/#decimalunimplyvalue-precision-%E2%87%92-codenumbercode\">DecimalUnimply(value, precision) ⇒ &#x3C;code>number&#x3C;/code></a></li>\n</ul>","fields":{"articleTitle":"format","contentTitle":"Format","headTagTitle":"format","internalSummary":"/root/.local/share/thorka/site/EOSIO/eosjs/tagged/eosjs/lib/gatsby/data/v15.0/SUMMARY.json","isCollection":false,"isRoot":true,"isTagged":true,"organization":"EOSIO","originalKey":"/","pathData":"{\"tagged\":true,\"parentPath\":\"v15.0\",\"collectionPath\":\"/\",\"rootDirPath\":\"v15.0\",\"filename\":\"format.md\"}","repository":"eosjs","showSearch":true,"slug":"/v15.0/format","tagsList":"[{\"beta\":false,\"build\":false,\"deprecated\":false,\"latest\":true,\"rc\":false,\"tag\":\"20.0.0\",\"tag_reduced\":\"20.0\",\"tag_reduced_friendly\":\"v20.0\",\"tag_sanitized\":\"20.0.0\",\"summaryPath\":\"/root/.local/share/thorka/site/EOSIO/eosjs/tagged/eosjs/lib/gatsby/data/latest/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"latest\"},{\"beta\":false,\"build\":false,\"deprecated\":false,\"latest\":false,\"rc\":false,\"tag\":\"v16.0.9\",\"tag_reduced\":\"16.0\",\"tag_reduced_friendly\":\"v16.0\",\"tag_sanitized\":\"16.0.9\",\"summaryPath\":\"/root/.local/share/thorka/site/EOSIO/eosjs/tagged/eosjs/lib/gatsby/data/v16.0/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v16.0\"},{\"beta\":false,\"build\":false,\"deprecated\":false,\"latest\":false,\"rc\":false,\"tag\":\"v15.0.6\",\"tag_reduced\":\"15.0\",\"tag_reduced_friendly\":\"v15.0\",\"tag_sanitized\":\"15.0.6\",\"summaryPath\":\"/root/.local/share/thorka/site/EOSIO/eosjs/tagged/eosjs/lib/gatsby/data/v15.0/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v15.0\"}]","latestDDVersion":"latest","importedSummary":"N/A","hasPrimaryNavigation":false,"primaryNavData":"[{\"text\":\"NONE\",\"path\":\"EMPTY\"}]","currentVersion":"v15.0","currentDDVersion":"15.0","summaryJson":"{\"array\":[{\"title\":\"Format\",\"link\":\"format.md\"},{\"title\":\"Prior versions\",\"link\":\"prior_versions.md\"},{\"title\":\"Reference\",\"link\":\"\",\"sub\":[]}],\"title\":[]}"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/v15.0/format"}}}