{"componentChunkName":"component---src-page-templates-content-page-jsx","path":"/v15.0/index","result":{"data":{"site":{"pathPrefix":"/eosjs"},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/v15.0/reference"}},{"fields":{"slug":"/latest/installation"}},{"fields":{"slug":"/latest/index"}},{"fields":{"slug":"/v16.0/format"}},{"fields":{"slug":"/latest/technical-overview"}},{"fields":{"slug":"/v16.0/prior_versions"}},{"fields":{"slug":"/v16.0/README"}},{"fields":{"slug":"/v16.0/reference"}},{"fields":{"slug":"/v15.0/format"}},{"fields":{"slug":"/v15.0/README"}},{"fields":{"slug":"/v16.0/index"}},{"fields":{"slug":"/v15.0/index"}},{"fields":{"slug":"/v15.0/prior_versions"}},{"fields":{"slug":"/latest/basic-usage/browser"}},{"fields":{"slug":"/latest/basic-usage/commonjs"}},{"fields":{"slug":"/latest/README"}},{"fields":{"slug":"/latest/basic-usage/es-modules"}},{"fields":{"slug":"/latest/basic-usage/index"}},{"fields":{"slug":"/latest/classes/_publickey_.publickey"}},{"fields":{"slug":"/latest/classes/_privatekey_.privatekey"}},{"fields":{"slug":"/latest/enums/numeric.keytype"}},{"fields":{"slug":"/latest/classes/api.api-1"}},{"fields":{"slug":"/latest/classes/_signature_.signature"}},{"fields":{"slug":"/latest/classes/json_rpc.jsonrpc"}},{"fields":{"slug":"/latest/classes/js_sig.jssignatureprovider"}},{"fields":{"slug":"/latest/classes/rpc_error.rpcerror"}},{"fields":{"slug":"/latest/classes/serialize.serializerstate"}},{"fields":{"slug":"/latest/classes/serialize.serialbuffer"}},{"fields":{"slug":"/latest/classes/webauthn_sig.webauthnsignatureprovider"}},{"fields":{"slug":"/latest/how-to-guides/how-to-approve-a-multisig-transaction"}},{"fields":{"slug":"/latest/faq/example-signature-providers"}},{"fields":{"slug":"/latest/how-to-guides/how-to-cancel-a-multisig-transaction"}},{"fields":{"slug":"/latest/faq/what-is-a-signature-provider"}},{"fields":{"slug":"/latest/how-to-guides/how-to-create-an-account"}},{"fields":{"slug":"/latest/how-to-guides/how-to-delete-permissions"}},{"fields":{"slug":"/latest/how-to-guides/how-to-create-permissions"}},{"fields":{"slug":"/latest/how-to-guides/how-to-deploy-a-smart-contract"}},{"fields":{"slug":"/latest/how-to-guides/how-to-execute-a-multisig-transaction"}},{"fields":{"slug":"/latest/how-to-guides/how-to-get-block-information"}},{"fields":{"slug":"/latest/how-to-guides/how-to-get-account-information"}},{"fields":{"slug":"/latest/how-to-guides/how-to-get-table-information"}},{"fields":{"slug":"/latest/how-to-guides/how-to-get-transaction-information"}},{"fields":{"slug":"/latest/how-to-guides/how-to-link-permissions"}},{"fields":{"slug":"/latest/how-to-guides/how-to-propose-a-multisig-transaction"}},{"fields":{"slug":"/latest/how-to-guides/how-to-set-the-network"}},{"fields":{"slug":"/latest/how-to-guides/how-to-stake"}},{"fields":{"slug":"/latest/how-to-guides/how-to-transfer-an-eosio-token"}},{"fields":{"slug":"/latest/how-to-guides/how-to-unlink-permissions"}},{"fields":{"slug":"/latest/how-to-guides/how-to-submit-a-transaction"}},{"fields":{"slug":"/latest/how-to-guides/how-to-unapprove-a-multisig-transaction"}},{"fields":{"slug":"/latest/how-to-guides/how-to-unstake"}},{"fields":{"slug":"/latest/interfaces/javascript_api.abiprovider"}},{"fields":{"slug":"/latest/how-to-guides/how-to-vote"}},{"fields":{"slug":"/latest/interfaces/javascript_api.authorityprovider"}},{"fields":{"slug":"/latest/interfaces/javascript_api.authorityproviderargs"}},{"fields":{"slug":"/latest/interfaces/javascript_api.binaryabi"}},{"fields":{"slug":"/latest/interfaces/javascript_api.signatureprovider"}},{"fields":{"slug":"/latest/interfaces/javascript_api.signatureproviderargs"}},{"fields":{"slug":"/latest/interfaces/javascript_api.cachedabi"}},{"fields":{"slug":"/latest/interfaces/numeric.key"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.abi"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.blockheaderstatetaposinfo"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.blockheader"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.blocktaposinfo"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.getabiresult"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.getblockheaderstateresult"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.getcoderesult"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.getinforesult"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.getblockresult"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.getrawcodeandabiresult"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.pushtransactionargs"}},{"fields":{"slug":"/latest/interfaces/rpc_api_methods.signedblockheader"}},{"fields":{"slug":"/latest/interfaces/serialize.action"}},{"fields":{"slug":"/latest/interfaces/serialize.contract"}},{"fields":{"slug":"/latest/interfaces/serialize.authorization"}},{"fields":{"slug":"/latest/interfaces/serialize.createtypeargs"}},{"fields":{"slug":"/latest/interfaces/serialize.field"}},{"fields":{"slug":"/latest/interfaces/serialize.serializedaction"}},{"fields":{"slug":"/latest/interfaces/serialize.serializeroptions"}},{"fields":{"slug":"/latest/interfaces/serialize.type"}},{"fields":{"slug":"/latest/interfaces/serialize.symbol"}},{"fields":{"slug":"/latest/modules/_eosjs_key_conversions_"}},{"fields":{"slug":"/latest/modules/_privatekey_"}},{"fields":{"slug":"/latest/modules/_publickey_"}},{"fields":{"slug":"/latest/modules/_rpc_web_"}},{"fields":{"slug":"/latest/modules/_signature_"}},{"fields":{"slug":"/latest/modules/api"}},{"fields":{"slug":"/latest/modules/javascript_api"}},{"fields":{"slug":"/latest/modules/js_sig"}},{"fields":{"slug":"/latest/modules/json_rpc"}},{"fields":{"slug":"/latest/modules/numeric"}},{"fields":{"slug":"/latest/modules/rpc_error"}},{"fields":{"slug":"/latest/modules/rpc_api_methods"}},{"fields":{"slug":"/latest/modules/serialize"}},{"fields":{"slug":"/latest/modules/webauthn_sig"}},{"fields":{"slug":"/latest/troubleshooting/connectivity"}},{"fields":{"slug":"/latest/troubleshooting/missing-authorizations"}}]},"markdownRemark":{"html":"<p><a href=\"https://travis-ci.org/EOSIO/eosjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://travis-ci.org/EOSIO/eosjs.svg?branch=master\" alt=\"Build Status\"></a>\n<a href=\"https://www.npmjs.org/package/eosjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://img.shields.io/npm/v/eosjs.svg\" alt=\"NPM\"></a></p>\n<h1 id=\"eosjs\">Eosjs</h1>\n<p>General purpose library for EOSIO blockchains.</p>\n<h3 id=\"versions\">Versions</h3>\n<table>\n<thead>\n<tr>\n<th><a href=\"/eosjs/EOSIO/eosjs\">EOSIO/eosjs</a></th>\n<th><a href=\"https://www.npmjs.com/package/eosjs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Npm</a></th>\n<th><a href=\"https://github.com/EOSIO/eos\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">EOSIO/eos</a></th>\n<th><a href=\"https://hub.docker.com/r/eosio/eos/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Docker Hub</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tag: 15.0.6</td>\n<td><code class=\"language-text\">npm install eosjs</code> (version 15)</td>\n<td>tag: v1.0.10</td>\n<td>eosio/eos:v1.0.10</td>\n</tr>\n</tbody>\n</table>\n<p>Release notes:</p>\n<ul>\n<li>eosjs@15.0.6 is compatible with eosio v1.0.5 - v1.0.10</li>\n<li>Converted some types in <strong>format</strong> module from unsigned to signed: UDecimalPad -> DecimalPad for example (15.0.1)</li>\n<li>All <code class=\"language-text\">asset</code> and <code class=\"language-text\">extended_asset</code> amounts require exact decimal places (Change <code class=\"language-text\">1 SYS</code> to <code class=\"language-text\">1.0000 SYS</code>) (15.0.0)</li>\n<li>Use <code class=\"language-text\">config.verbose</code> instead of <code class=\"language-text\">config.debug</code> (14.1.0)</li>\n</ul>\n<p>Prior <a href=\"/eosjs/v15.0/docs/prior_versions\">version</a> matrix.</p>\n<h3 id=\"usage\">Usage</h3>\n<ul>\n<li>Install with: <code class=\"language-text\">npm install eosjs</code></li>\n<li>Html script tag, see <a href=\"https://github.com/EOSIO/eosjs/releases\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">releases</a> for the correct <strong>version</strong> and its matching script <strong>integrity</strong> hash.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--\nsha512-4M+2te9VpDRu+8YD2sJtPjUo92WfNcUcD3jzwe5gcyjevGmqBuZpSpN2UbUtiJl1fNOqkJO8VQ2y3rfFatc6ZQ== lib/eos.js\nsha512-IDRAIcOGQTZN3jE/TvTiG3czpjzmWPiYi0+mwWbJVdYwPfbhD2YtzlpD4+rKE+MIuysseAenToyLNoO1whNFUg== lib/eos.min.js\nsha512-eqTZ81MJdAliK6erbjeUgKF/ShmhUsSo7LL1GX6KRYsYDFVm0kL6eETHVJl6JBITVLXWMJZ6oFfh1wronuTgqA== lib/eos.min.js.map\n--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/eosjs@15.0.6/lib/eos.min.js<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">integrity</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sha512-IDRAIcOGQTZN3jE/TvTiG3czpjzmWPiYi0+mwWbJVdYwPfbhD2YtzlpD4+rKE+MIuysseAenToyLNoO1whNFUg==<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">crossorigin</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>anonymous<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  eos <span class=\"token operator\">=</span> <span class=\"token function\">Eos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    httpEndpoint<span class=\"token punctuation\">:</span> <span class=\"token string\">'http://ayeaye.cypherglass.com:8888'</span><span class=\"token punctuation\">,</span>\n    chainId<span class=\"token punctuation\">:</span> <span class=\"token string\">'038f4b0fc8ff18a4f0842a8f0564611f6e96e8535901dd45e43ac8691a1c4dca'</span><span class=\"token punctuation\">,</span>\n    verbose<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n  See console object: Eos\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3 id=\"usage-1\">Usage</h3>\n<p>Ways to instantiate eosjs.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Eos <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eosjs'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Private key or keys (array) provided statically or by way of a function.</span>\n<span class=\"token comment\">// For multiple keys, the get_required_keys API is used (more on that below).</span>\nkeyProvider<span class=\"token punctuation\">:</span> <span class=\"token string\">'5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'</span>\n\n<span class=\"token comment\">// Localhost Testnet (run ./docker/up.sh)</span>\neos <span class=\"token operator\">=</span> <span class=\"token function\">Eos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>keyProvider<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Connect to a testnet or mainnet</span>\neos <span class=\"token operator\">=</span> <span class=\"token function\">Eos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>httpEndpoint<span class=\"token punctuation\">,</span> chainId<span class=\"token punctuation\">,</span> keyProvider<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Cold-storage</span>\neos <span class=\"token operator\">=</span> <span class=\"token function\">Eos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>httpEndpoint<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> chainId<span class=\"token punctuation\">,</span> keyProvider<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Read-only instance when 'eosjs' is already a dependency</span>\neos <span class=\"token operator\">=</span> Eos<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">.</span><span class=\"token function\">api</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token comment\">/*config*/</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Read-only instance when an application never needs to write (smaller library)</span>\nEosApi <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eosjs-api'</span><span class=\"token punctuation\">)</span>\neos <span class=\"token operator\">=</span> <span class=\"token function\">EosApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token comment\">/*config*/</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>No-arguments prints usage.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">eos<span class=\"token punctuation\">.</span><span class=\"token function\">getBlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">USAGE\ngetBlock - Fetch a block from the blockchain.\n\nPARAMETERS\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"block_num_or_id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Start a nodeosd process.  The docker in this repository provides a setup\nthat supports the examples in this README.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=user data-host=localhost></span></span><span class=\"token builtin class-name\">cd</span> ./docker <span class=\"token operator\">&amp;&amp;</span> ./up.sh</code></pre></div>\n<p>All functions read only or transactional follow this pattern for parameters.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// If the last argument is a function it is treated as a callback</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">getBlock</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// If a callback is not provided, a Promise is returned</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">getBlock</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// @returns {Promise}</span>\n\n<span class=\"token comment\">// Parameters can be positional or an object</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">getBlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>block_num_or_id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// An API with no parameters is invoked with an empty object or callback (avoids logging usage)</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// @returns {Promise}</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Chain and history API functions are available after creating the <code class=\"language-text\">eos</code> object.\nAPI methods and documentation are generated from the chain and history json files.</p>\n<ul>\n<li><a href=\"https://github.com/EOSIO/eosjs-api/blob/master/src/api/v1/chain.json\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">chain.json</a></li>\n<li><a href=\"https://github.com/EOSIO/eosjs-api/blob/master/src/api/v1/history.json\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">history.json</a></li>\n</ul>\n<p>Until we generate a markdown for these, please convert the names in these\njson to camel case functions.</p>\n<ul>\n<li><code class=\"language-text\">&quot;get_info&quot;: ..</code> is <code class=\"language-text\">eos.getInfo(..)</code></li>\n</ul>\n<h3 id=\"configuration\">Configuration</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Eos <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eosjs'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Default configuration (additional options below)</span>\nconfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  chainId<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 32 byte (64 char) hex string</span>\n  keyProvider<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'PrivateKeys...'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// WIF string or array of keys..</span>\n  httpEndpoint<span class=\"token punctuation\">:</span> <span class=\"token string\">'http://127.0.0.1:8888'</span><span class=\"token punctuation\">,</span>\n  expireInSeconds<span class=\"token punctuation\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n  broadcast<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  verbose<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// API activity</span>\n  sign<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n\neos <span class=\"token operator\">=</span> <span class=\"token function\">Eos</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p><strong>chainId</strong> <code class=\"language-text\">hex</code> - Unique ID for the blockchain you're connecting to.  This\nis required for valid transaction signing.  The chainId is provided via the\n<a href=\"http://ayeaye.cypherglass.com:8888/v1/chain/get_info\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">get_info</a> API call.</p>\n<p>Identifies a chain by its initial genesis block.  All transactions signed will\nonly be valid the blockchain with this chainId.  Verify the chainId for\nsecurity reasons.</p>\n</li>\n<li><strong>keyProvider</strong> <code class=\"language-text\">[array&lt;string&gt;|string|function]</code> - Provides private keys\nused to sign transaction.  If multiple private keys are found, the API\n<code class=\"language-text\">get_required_keys</code> is called to discover which signing keys to use.  If a\nfunction is provided, this function is called for each transaction.</li>\n<li>\n<p><strong>httpEndpoint</strong> <code class=\"language-text\">string</code> - http or https location of a nodeosd server\nproviding a chain API.  When using eosjs from a browser remember to configure\nthe same origin policy in nodeosd or proxy server.  For testing, nodeosd\nconfiguration <code class=\"language-text\">access-control-allow-origin = *</code> could be used.</p>\n<p>Set this value to <strong>null</strong> for a cold-storage (no network) configuration.</p>\n</li>\n<li><strong>expireInSeconds</strong> <code class=\"language-text\">number</code> - number of seconds before the transaction\nwill expire.  The time is based on the nodeosd's clock.  An unexpired\ntransaction that may have had an error is a liability until the expiration\nis reached, this time should be brief.</li>\n<li><strong>broadcast</strong> <code class=\"language-text\">[boolean=true]</code> - post the transaction to\nthe blockchain.  Use false to obtain a fully signed transaction.</li>\n<li><strong>verbose</strong> <code class=\"language-text\">[boolean=false]</code> - verbose logging such as API activity.</li>\n<li><strong>debug</strong> <code class=\"language-text\">[boolean=false]</code> - low level debug logging (serialization).</li>\n<li><strong>sign</strong> <code class=\"language-text\">[boolean=true]</code> - sign the transaction with a private key.  Leaving\na transaction unsigned avoids the need to provide a private key.</li>\n<li>\n<p><strong>mockTransactions</strong> (advanced)</p>\n<ul>\n<li><code class=\"language-text\">mockTransactions: () =&gt; null // &#39;pass&#39;,  or &#39;fail&#39;</code></li>\n<li><code class=\"language-text\">pass</code> - do not broadcast, always pretend that the transaction worked</li>\n<li><code class=\"language-text\">fail</code> - do not broadcast, pretend the transaction failed</li>\n<li><code class=\"language-text\">null|undefined</code> - broadcast as usual</li>\n</ul>\n</li>\n<li>\n<p><strong>transactionHeaders</strong> (advanced) - manually calculate transaction header.  This\nmay be provided so eosjs does not need to make header related API calls to\nnodeos.  Used in environments like cold-storage.  This callback is called for\nevery transaction. Headers are documented here <a href=\"https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">eosjs-api#headers</a>.</p>\n<ul>\n<li><code class=\"language-text\">transactionHeaders: (expireInSeconds, callback) =&gt; {callback(null/*error*/, headers)}</code></li>\n</ul>\n</li>\n<li>\n<p><strong>logger</strong> - default logging configuration.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">logger<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  log<span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">.</span>verbose <span class=\"token operator\">?</span> console<span class=\"token punctuation\">.</span>log <span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  error<span class=\"token punctuation\">:</span> console<span class=\"token punctuation\">.</span>error <span class=\"token comment\">// null to disable</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Turn off all error logging: <code class=\"language-text\">config.logger = {error: null}</code></p>\n</li>\n</ul>\n<h3 id=\"options\">Options</h3>\n<p>Options may be provided after parameters.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  authorization<span class=\"token punctuation\">:</span> <span class=\"token string\">'alice@active'</span><span class=\"token punctuation\">,</span>\n  broadcast<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  sign<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">eos<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'alice'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bob'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.0000 SYS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p><strong>authorization</strong> <code class=\"language-text\">[array&lt;auth&gt;|auth]</code> - identifies the\nsigning account and permission typically in a multisig\nconfiguration.  Authorization may be a string formatted as\n<code class=\"language-text\">account@permission</code> or an <code class=\"language-text\">object&lt;{actor: account, permission}&gt;</code>.</p>\n<ul>\n<li>If missing default authorizations will be calculated.</li>\n<li>If provided additional authorizations will not be added.</li>\n<li>Performs deterministic sorting by account name</li>\n</ul>\n<p>If a default authorization is calculated the action's 1st field must be\nan account_name.  The account_name in the 1st field gets added as the\nactive key authorization for the action.</p>\n</li>\n<li><strong>broadcast</strong> <code class=\"language-text\">[boolean=true]</code> - post the transaction to\nthe blockchain.  Use false to obtain a fully signed transaction.</li>\n<li><strong>sign</strong> <code class=\"language-text\">[boolean=true]</code> - sign the transaction with a private key.  Leaving\na transaction unsigned avoids the need to provide a private key.</li>\n</ul>\n<h3 id=\"transaction\">Transaction</h3>\n<p>The transaction function accepts the standard blockchain transaction.</p>\n<p>Required transaction header fields will be added unless you are signing without a\nnetwork connection (httpEndpoint == null). In that case provide you own headers:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// only needed in cold-storage or for offline transactions</span>\n<span class=\"token keyword\">const</span> headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  expiration<span class=\"token punctuation\">:</span> <span class=\"token string\">'2018-06-14T18:16:10'</span>\n  ref_block_num<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  ref_block_prefix<span class=\"token punctuation\">:</span> <span class=\"token number\">452435776</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Create and send (broadcast) a transaction:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/** @return {Promise} */</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...headers,</span>\n    actions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        account<span class=\"token punctuation\">:</span> <span class=\"token string\">'eosio.token'</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'transfer'</span><span class=\"token punctuation\">,</span>\n        authorization<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n          actor<span class=\"token punctuation\">:</span> <span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span>\n          permission<span class=\"token punctuation\">:</span> <span class=\"token string\">'active'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span>\n          to<span class=\"token punctuation\">:</span> <span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span>\n          quantity<span class=\"token punctuation\">:</span> <span class=\"token string\">'7.0000 SYS'</span><span class=\"token punctuation\">,</span>\n          memo<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// options -- example: {broadcast: false}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"named-action-functions\">Named action functions</h3>\n<p>More concise functions are provided for applications that may use actions\nmore frequently.  This avoids having lots of JSON in the code.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Run with no arguments to print usage.</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Callback is last, when omitted a promise is returned</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.0000 SYS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> result</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.1000 SYS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// @returns {Promise}</span>\n\n<span class=\"token comment\">// positional parameters</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.2000 SYS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// named parameters</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> <span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">:</span> <span class=\"token string\">'1.3000 SYS'</span><span class=\"token punctuation\">,</span> memo<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// options appear after parameters</span>\noptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>broadcast<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> sign<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// `false` is a shortcut for {broadcast: false}</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.4000 SYS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Read-write API methods and documentation are generated from the eosio\n<a href=\"https://github.com/EOSIO/eosjs/blob/master/src/schema/eosio_token.json\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">token</a> and\n<a href=\"https://github.com/EOSIO/eosjs/blob/master/src/schema/eosio_system.json\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">system</a>.</p>\n<p>Assets amounts require zero padding.  For a better user-experience, if you know\nthe correct precision you may use DecimalPad to add the padding.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">DecimalPad <span class=\"token operator\">=</span> Eos<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">.</span>DecimalPad\nuserInput <span class=\"token operator\">=</span> <span class=\"token string\">'10.2'</span>\nprecision <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span><span class=\"token string\">'10.2000'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">DecimalPad</span><span class=\"token punctuation\">(</span>userInput<span class=\"token punctuation\">,</span> precision<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>For more advanced signing, see <code class=\"language-text\">keyProvider</code> and <code class=\"language-text\">signProvider</code> in\n<a href=\"https://github.com/EOSIO/eosjs/blob/master/src/index.test.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">index.test.js</a>.</p>\n<h3 id=\"shorthand\">Shorthand</h3>\n<p>Shorthand is available for some types such as Asset and Authority.  This syntax\nis only for concise functions and does not work when providing entire transaction\nobjects to <code class=\"language-text\">eos.transaction</code>..</p>\n<p>For example:</p>\n<ul>\n<li>permission <code class=\"language-text\">inita</code> defaults <code class=\"language-text\">inita@active</code></li>\n<li>authority <code class=\"language-text\">&#39;EOS6MRy..&#39;</code> expands <code class=\"language-text\">{threshold: 1, keys: [{key: &#39;EOS6MRy..&#39;, weight: 1}]}</code></li>\n<li>authority <code class=\"language-text\">inita</code> expands <code class=\"language-text\">{threshold: 1, accounts: [{permission: {actor: &#39;inita&#39;, permission: &#39;active&#39;}, weight: 1}]}</code></li>\n</ul>\n<h3 id=\"new-account\">New Account</h3>\n<p>New accounts will likely require some staked tokens for RAM and bandwidth.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">wif <span class=\"token operator\">=</span> <span class=\"token string\">'5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'</span>\npubkey <span class=\"token operator\">=</span> <span class=\"token string\">'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'</span>\n\neos<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tr</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  tr<span class=\"token punctuation\">.</span><span class=\"token function\">newaccount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    creator<span class=\"token punctuation\">:</span> <span class=\"token string\">'eosio'</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span>\n    owner<span class=\"token punctuation\">:</span> pubkey<span class=\"token punctuation\">,</span>\n    active<span class=\"token punctuation\">:</span> pubkey\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  tr<span class=\"token punctuation\">.</span><span class=\"token function\">buyrambytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    payer<span class=\"token punctuation\">:</span> <span class=\"token string\">'eosio'</span><span class=\"token punctuation\">,</span>\n    receiver<span class=\"token punctuation\">:</span> <span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span>\n    bytes<span class=\"token punctuation\">:</span> <span class=\"token number\">8192</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  tr<span class=\"token punctuation\">.</span><span class=\"token function\">delegatebw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'eosio'</span><span class=\"token punctuation\">,</span>\n    receiver<span class=\"token punctuation\">:</span> <span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span>\n    stake_net_quantity<span class=\"token punctuation\">:</span> <span class=\"token string\">'10.0000 SYS'</span><span class=\"token punctuation\">,</span>\n    stake_cpu_quantity<span class=\"token punctuation\">:</span> <span class=\"token string\">'10.0000 SYS'</span><span class=\"token punctuation\">,</span>\n    transfer<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"contract\">Contract</h3>\n<p>Deploy and call smart contracts.</p>\n<h4 id=\"compile\">Compile</h4>\n<p>If you're loading a <strong>wasm</strong> file, you do not need binaryen. If you're loading\na <strong>wast</strong> file you can include and configure the binaryen compiler, this is\nused to compile to <strong>wasm</strong> automatically when calling <strong>setcode</strong>.</p>\n<p>Versions of binaryen may be <a href=\"https://github.com/EOSIO/eos/issues/2187\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">problematic</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=user data-host=localhost></span></span>$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> binaryen@37.0.0</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">binaryen <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'binaryen'</span><span class=\"token punctuation\">)</span>\neos <span class=\"token operator\">=</span> <span class=\"token function\">Eos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>keyProvider<span class=\"token punctuation\">,</span> binaryen<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"deploy\">Deploy</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">wasm <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">docker/contracts/eosio.token/eosio.token.wasm</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\nabi <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">docker/contracts/eosio.token/eosio.token.abi</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Publish contract to the blockchain</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">setcode</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> wasm<span class=\"token punctuation\">)</span> <span class=\"token comment\">// @returns {Promise}</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">setabi</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// @returns {Promise}</span></code></pre></div>\n<h4 id=\"fetch-a-smart-contract\">Fetch a smart contract</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// @returns {Promise}</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">contract</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Run immediately, `myaction` returns a Promise</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">contract</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">myaccount</span> <span class=\"token operator\">=></span> myaccount<span class=\"token punctuation\">.</span><span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Group actions. `transaction` returns a Promise but `myaction` does not</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">myaccount</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> myaccount<span class=\"token punctuation\">.</span><span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Transaction with multiple contracts</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'myaccount2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>myaccount<span class=\"token punctuation\">,</span> myaccount2<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   myaccount<span class=\"token punctuation\">.</span><span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n   myaccount2<span class=\"token punctuation\">.</span><span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"offline-or-cold-storage-contract\">Offline or cold-storage contract</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">eos <span class=\"token operator\">=</span> <span class=\"token function\">Eos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>httpEndpoint<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nabi <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">docker/contracts/eosio.token/eosio.token.abi</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\neos<span class=\"token punctuation\">.</span>fc<span class=\"token punctuation\">.</span>abiCache<span class=\"token punctuation\">.</span><span class=\"token function\">abi</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Check that the ABI is available (print usage)</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">contract</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">myaccount</span> <span class=\"token operator\">=></span> myaccount<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"offline-or-cold-storage-transaction\">Offline or cold-storage transaction</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ONLINE</span>\n\n<span class=\"token comment\">// Prepare headers</span>\nexpireInSeconds <span class=\"token operator\">=</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token comment\">// 1 hour</span>\n\neos <span class=\"token operator\">=</span> <span class=\"token function\">Eos</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* {httpEndpoint: 'https://..'} */</span><span class=\"token punctuation\">)</span>\n\ninfo <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> eos<span class=\"token punctuation\">.</span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nchainDate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>head_block_time <span class=\"token operator\">+</span> <span class=\"token string\">'Z'</span><span class=\"token punctuation\">)</span>\nexpiration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>chainDate<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> expireInSeconds <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\nexpiration <span class=\"token operator\">=</span> expiration<span class=\"token punctuation\">.</span><span class=\"token function\">toISOString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\nblock <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> eos<span class=\"token punctuation\">.</span><span class=\"token function\">getBlock</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>last_irreversible_block_num<span class=\"token punctuation\">)</span>\n\ntransactionHeaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  expiration<span class=\"token punctuation\">,</span>\n  ref_block_num<span class=\"token punctuation\">:</span> info<span class=\"token punctuation\">.</span>last_irreversible_block_num <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFFFF</span><span class=\"token punctuation\">,</span>\n  ref_block_prefix<span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">.</span>ref_block_prefix\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// OFFLINE (bring `transactionHeaders`)</span>\n\n<span class=\"token comment\">// All keys in keyProvider will sign.</span>\neos <span class=\"token operator\">=</span> <span class=\"token function\">Eos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>httpEndpoint<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> chainId<span class=\"token punctuation\">,</span> keyProvider<span class=\"token punctuation\">,</span> transactionHeaders<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\ntransfer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> eos<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.0000 SYS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\ntransferTransaction <span class=\"token operator\">=</span> transfer<span class=\"token punctuation\">.</span>transaction\n\n<span class=\"token comment\">// ONLINE (bring `transferTransaction`)</span>\n\neos <span class=\"token operator\">=</span> <span class=\"token function\">Eos</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/* {httpEndpoint: 'https://..'} */</span><span class=\"token punctuation\">)</span>\n\nprocessedTransaction <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> eos<span class=\"token punctuation\">.</span><span class=\"token function\">pushTransaction</span><span class=\"token punctuation\">(</span>transferTransaction<span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"custom-token\">Custom Token</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// more on the contract / transaction syntax</span>\n\n<span class=\"token keyword\">await</span> eos<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">myaccount</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// Create the initial token with its max supply</span>\n  <span class=\"token comment\">// const options = {authorization: 'myaccount'} // default</span>\n  myaccount<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'10000000.000 TOK'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//, options)</span>\n\n  <span class=\"token comment\">// Issue some of the max supply for circulation into an arbitrary account</span>\n  myaccount<span class=\"token punctuation\">.</span><span class=\"token function\">issue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'10000.000 TOK'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'issue'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> balance <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> eos<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrencyBalance</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'TOK'</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Currency Balance'</span><span class=\"token punctuation\">,</span> balance<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"calling-actions\">Calling Actions</h3>\n<p>Other ways to use contracts and transactions.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// if either transfer fails, both will fail (1 transaction, 2 messages)</span>\n<span class=\"token keyword\">await</span> eos<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">eos</span> <span class=\"token operator\">=></span>\n  <span class=\"token punctuation\">{</span>\n    eos<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.0000 SYS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token comment\">/*memo*/</span><span class=\"token punctuation\">)</span>\n    eos<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'initc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.0000 SYS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token comment\">/*memo*/</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// Returning a promise is optional (but handled as expected)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// [options],</span>\n  <span class=\"token comment\">// [callback]</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// transaction on a single contract</span>\n<span class=\"token keyword\">await</span> eos<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">myaccount</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  myaccount<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'10.000 TOK@myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// mix contracts in the same transaction</span>\n<span class=\"token keyword\">await</span> eos<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'eosio.token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>myaccount<span class=\"token punctuation\">,</span> eosio_token<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  myaccount<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.000 TOK@myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n  eosio_token<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.0000 SYS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// The contract method does not take an array so must be called once for</span>\n<span class=\"token comment\">// each contract that is needed.</span>\n<span class=\"token keyword\">const</span> myaccount <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> eos<span class=\"token punctuation\">.</span><span class=\"token function\">contract</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">await</span> myaccount<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myaccount'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.000 TOK'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// a transaction to a contract instance can specify multiple actions</span>\n<span class=\"token keyword\">await</span> myaccount<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">myaccountTr</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  myaccountTr<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.000 TOK'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n  myaccountTr<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'initb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1.000 TOK'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"development\">Development</h1>\n<p>From time-to-time the eosjs and nodeos binary format will change between releases\nso you may need to start <code class=\"language-text\">nodeos</code> with the <code class=\"language-text\">--skip-transaction-signatures</code> parameter\nto get your transactions to pass.</p>\n<p>Note, <code class=\"language-text\">package.json</code> has a \"main\" pointing to <code class=\"language-text\">./lib</code>.  The <code class=\"language-text\">./lib</code> folder is for\nes2015 code built in a separate step. If you're changing and testing code,\nimport from <code class=\"language-text\">./src</code> instead.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Eos <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./src'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// forceActionDataHex = false helps transaction readability but may trigger back-end bugs</span>\nconfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>verbose<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> debug<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> broadcast<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> forceActionDataHex<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> keyProvider<span class=\"token punctuation\">}</span>\n\neos <span class=\"token operator\">=</span> <span class=\"token function\">Eos</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"fcbuffer\">Fcbuffer</h4>\n<p>The <code class=\"language-text\">eos</code> instance can provide serialization:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 'asset' is a type but could be any struct or type like: transaction or uint8</span>\ntype <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">:</span> <span class=\"token string\">'00ff'</span><span class=\"token punctuation\">}</span>\nbuffer <span class=\"token operator\">=</span> eos<span class=\"token punctuation\">.</span>fc<span class=\"token punctuation\">.</span><span class=\"token function\">toBuffer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'extensions_type'</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span>\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">deepEqual</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> eos<span class=\"token punctuation\">.</span>fc<span class=\"token punctuation\">.</span><span class=\"token function\">fromBuffer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'extensions_type'</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// ABI Serialization</span>\neos<span class=\"token punctuation\">.</span><span class=\"token function\">contract</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eosio.token'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> eosio_token</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  create <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>issuer<span class=\"token punctuation\">:</span> <span class=\"token string\">'inita'</span><span class=\"token punctuation\">,</span> maximum_supply<span class=\"token punctuation\">:</span> <span class=\"token string\">'1.0000 SYS'</span><span class=\"token punctuation\">}</span>\n  buffer <span class=\"token operator\">=</span> eosio_token<span class=\"token punctuation\">.</span>fc<span class=\"token punctuation\">.</span><span class=\"token function\">toBuffer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create'</span><span class=\"token punctuation\">,</span> create<span class=\"token punctuation\">)</span>\n  assert<span class=\"token punctuation\">.</span><span class=\"token function\">deepEqual</span><span class=\"token punctuation\">(</span>create<span class=\"token punctuation\">,</span> eosio_token<span class=\"token punctuation\">.</span>fc<span class=\"token punctuation\">.</span><span class=\"token function\">fromBuffer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create'</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Use Node v10+ for <code class=\"language-text\">package-lock.json</code>.</p>\n<h1 id=\"related-libraries\">Related Libraries</h1>\n<p>These libraries are integrated into <code class=\"language-text\">eosjs</code> seamlessly so you probably do not\nneed to use them directly.  They are exported here giving more API access or\nin some cases may be used standalone.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span>format<span class=\"token punctuation\">,</span> api<span class=\"token punctuation\">,</span> ecc<span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">,</span> Fcbuffer<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Eos<span class=\"token punctuation\">.</span>modules</code></pre></div>\n<ul>\n<li>\n<p>format <a href=\"/eosjs/v15.0/docs/format\">./format.md</a></p>\n<ul>\n<li>Blockchain name validation</li>\n<li>Asset string formatting</li>\n</ul>\n</li>\n<li>\n<p>eosjs-api [<a href=\"https://github.com/eosio/eosjs-api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a>, <a href=\"https://www.npmjs.org/package/eosjs-api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NPM</a>]</p>\n<ul>\n<li>Remote API to an EOS blockchain node (nodeos)</li>\n<li>Use this library directly if you need read-only access to the blockchain\n(don't need to sign transactions).</li>\n</ul>\n</li>\n<li>\n<p>eosjs-ecc [<a href=\"https://github.com/eosio/eosjs-ecc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a>, <a href=\"https://www.npmjs.org/package/eosjs-ecc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NPM</a>]</p>\n<ul>\n<li>Private Key, Public Key, Signature, AES, Encryption / Decryption</li>\n<li>Validate public or private keys</li>\n<li>Encrypt or decrypt with EOS compatible checksums</li>\n<li>Calculate a shared secret</li>\n</ul>\n</li>\n<li>\n<p>json {<a href=\"https://github.com/EOSIO/eosjs-api/blob/master/src/api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">api</a>, <a href=\"https://github.com/EOSIO/eosjs/blob/master/src/schema\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">schema</a>},</p>\n<ul>\n<li>Blockchain definitions (api method names, blockchain schema)</li>\n</ul>\n</li>\n<li>\n<p>eosjs-keygen [<a href=\"https://github.com/eosio/eosjs-keygen\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a>, <a href=\"https://www.npmjs.org/package/eosjs-keygen\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NPM</a>]</p>\n<ul>\n<li>private key storage and key management</li>\n</ul>\n</li>\n<li>\n<p>Fcbuffer [<a href=\"https://github.com/eosio/eosjs-fcbuffer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a>, <a href=\"https://www.npmjs.org/package/fcbuffer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NPM</a>]</p>\n<ul>\n<li>Binary serialization used by the blockchain</li>\n<li>Clients sign the binary form of the transaction</li>\n<li>Allows client to know what it is signing</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"environment\">Environment</h1>\n<p>Node and browser (es2015)</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/eosjs/v15.0/index/#eosjs\">Eosjs</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/eosjs/v15.0/index/#versions\">Versions</a></li>\n<li><a href=\"/eosjs/v15.0/index/#usage\">Usage</a></li>\n<li><a href=\"/eosjs/v15.0/index/#usage-1\">Usage</a></li>\n<li><a href=\"/eosjs/v15.0/index/#configuration\">Configuration</a></li>\n<li><a href=\"/eosjs/v15.0/index/#options\">Options</a></li>\n<li><a href=\"/eosjs/v15.0/index/#transaction\">Transaction</a></li>\n<li><a href=\"/eosjs/v15.0/index/#named-action-functions\">Named action functions</a></li>\n<li><a href=\"/eosjs/v15.0/index/#shorthand\">Shorthand</a></li>\n<li><a href=\"/eosjs/v15.0/index/#new-account\">New Account</a></li>\n<li>\n<p><a href=\"/eosjs/v15.0/index/#contract\">Contract</a></p>\n<ul>\n<li><a href=\"/eosjs/v15.0/index/#compile\">Compile</a></li>\n<li><a href=\"/eosjs/v15.0/index/#deploy\">Deploy</a></li>\n<li><a href=\"/eosjs/v15.0/index/#fetch-a-smart-contract\">Fetch a smart contract</a></li>\n<li><a href=\"/eosjs/v15.0/index/#offline-or-cold-storage-contract\">Offline or cold-storage contract</a></li>\n<li><a href=\"/eosjs/v15.0/index/#offline-or-cold-storage-transaction\">Offline or cold-storage transaction</a></li>\n<li><a href=\"/eosjs/v15.0/index/#custom-token\">Custom Token</a></li>\n</ul>\n</li>\n<li><a href=\"/eosjs/v15.0/index/#calling-actions\">Calling Actions</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/eosjs/v15.0/index/#development\">Development</a></p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li><a href=\"/eosjs/v15.0/index/#fcbuffer\">Fcbuffer</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/eosjs/v15.0/index/#related-libraries\">Related Libraries</a></li>\n<li><a href=\"/eosjs/v15.0/index/#environment\">Environment</a></li>\n</ul>","frontmatter":{"edit_link":null,"request_changes_link":null},"fields":{"articleTitle":"NULL","contentTitle":"V15.0","headTagTitle":"","internalSummary":"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v15.0/SUMMARY.json","isCollection":false,"isRoot":true,"isTagged":true,"organization":"EOSIO","originalKey":"/","pathData":"{\"tagged\":true,\"parentPath\":\"v15.0\",\"collectionPath\":\"/\",\"rootDirPath\":\"v15.0\",\"filename\":\"index.md\"}","repository":"eosjs","showSearch":true,"slug":"/v15.0/index","tagsList":"[{\"beta\":null,\"build\":null,\"deprecated\":false,\"latest\":true,\"rc\":0,\"tag\":\"20.0.0\",\"tag_reduced\":\"20.0\",\"tag_reduced_friendly\":\"v20.0\",\"tag_sanitized\":\"20.0.0\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/latest/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"latest\"},{\"beta\":null,\"build\":null,\"deprecated\":false,\"latest\":false,\"rc\":0,\"tag\":\"v16.0.9\",\"tag_reduced\":\"16.0\",\"tag_reduced_friendly\":\"v16.0\",\"tag_sanitized\":\"16.0.9\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v16.0/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v16.0\"},{\"beta\":null,\"build\":null,\"deprecated\":false,\"latest\":false,\"rc\":0,\"tag\":\"v15.0.6\",\"tag_reduced\":\"15.0\",\"tag_reduced_friendly\":\"v15.0\",\"tag_sanitized\":\"15.0.6\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v15.0/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v15.0\"}]","latestDDVersion":"latest","importedSummary":"N/A","hasPrimaryNavigation":false,"primaryNavData":"[{\"text\":\"NONE\",\"path\":\"EMPTY\"}]","currentVersion":"v15.0","currentDDVersion":"15.0","summaryJson":"{\"array\":[{\"title\":\"Format\",\"link\":\"format.md\"},{\"title\":\"Prior versions\",\"link\":\"prior_versions.md\"},{\"title\":\"Reference\",\"link\":\"reference.md\",\"sub\":[]}],\"title\":[]}"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/v15.0/index"}}}